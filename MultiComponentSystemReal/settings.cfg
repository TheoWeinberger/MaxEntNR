//Configuration file for Max Ent Code 

//depths and sld values for SLD profile of the component materials
Components =
{
  numSubstances = 3; //Number of different substances in this system
  n = ((0.0,5.0),(0.0,2.0,0.0),(0.0,2.0,3.0,0.0)); //The amount of substance in each layer, if using toy model this corresponds to the sld for each layer in x10^-6 A^-2
  depths = ([150,10],[140,10,10],[140,5,5,10]); //depths are integer values
  sldVal = (1.0,1.0,-1.0); //the SLD of this material if using volumetric normalisation this is SLD x10^-6 A^-2, if using the total amount of substance this is in fm
  total = (68.0, 68.0,34.0); //The total amount of substance in the whole system (used for normalisation), if volumetric normalisation is being used this is just a ratio, if not then this is the molar density of the system (moles per cm cubed)
}

Substrate = 
{
    substrateSLD = 0.5; //The value of the SLD of the substrate
    lengthSubstrate = 10; //The length of the substrate in index units
}

Propagation =
{
    propagationSLD = 0.0; //The value of the SLD of the propagation region
    lengthPropagation = 10; //The length of the propagation region in index units
}

numIterations = 10000; //number of max ent cycles

numLagrangeSearches = 1000; //number of lagrange multipliers searched for

numBasisVectors = 8; //number of basis vectors used to search entropy and chi space

zeroLevel = 1e-10; //minimum intensity level allowed

minVariance = 1e-10; //minimum variance allowed 

dataScale = 1.0; //value by which the data is scaled by, I have found that 10 works quite well for reflectivity normalised to 1

chargeScale = 10.0; //value by which the charge total is scaled

chiSquaredScale = 1e10; //linear scaling the chisquared gradients to weight the fitting to change relative weight of the data fitting vs the entropy maximisation in the Langrangian

spikePortion = 0.2; //Fraction of charge distribution that is spiked (measured from the tail of the charge array)

spikeAmount = 4.0; //Amount by which charge distribution is spiked - note this is relativeset lo to an intial distribution which is random uniform in the range [0:1]

smoothIncrement = true; //Use the smooth incrementation of the profile generator which can help produce more physical profiles

useEdgeConstraints = true; //Use the constraints on the edges of the SLD profile to constrain the system, this required sldScaling = True

spikeCharge = true; //Spike the initial charge distribution near the substrate to encourage SLD formation in that region

volumetricNormalisation = true; //Boolean to determine whether to use volumetric normalisation or not

toyModel = false; //Boolean to determine whether the model being studied is a 'toy' model

error = false; //Boolean variable determining whether input data has error values

boundSLD = false; //Boolean variable stating whether or not SLD scaling to known max and min bounds is being used, note only one of scaleSLD and volumetric normalisation can be used

sldMaxBound = 1.0; //The max bound of the SLD if known

sldMinBound = 0.0; //The min bound of the SLD if known

smoothProfile = false; //Use this to recalculate the charges as N_i = 1/4 N_i-1 + 1/2 N_i + 1/4 N_i+1 every smoothInterval steps

smoothInterval = 1000; //The number of steps inbetween smoothing operations

forceZero = true; //Forces values below a fraction of the max charge to be set to 0

fracMax = 0.2; //The fraction of the maximum charge for a given species that defined the cutoff where below this cutoff the value will be forced to 0

forceInterval = 500; //Interval at which forceZero is applied

qOffset = 1; //The q space offset of the reflectivity data

qCutOff = 1000; //The index of q space at which the data is cropped

initChargeSpecific = false; //Boolean to determine which type of charge initialisation to use

noise = false; //Boolean to determine whether to add noise to the specific charge distribution

realWorldScaling = false; //Whether real scaling is being used;

knownSubstrate = false; //Whether substrate profile is known





  