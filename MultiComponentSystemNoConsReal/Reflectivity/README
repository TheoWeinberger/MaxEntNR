 ****************************************************************************************                                               
 * Code to generate the reflectivity pattern from a SLD profile using the 
 * Fourier form of the reflectivity relationship which is defined to be
 * 
 *          R[Q] = \frac{1}{Q^4} * |FFT(SLD)[Q]*[1-exp{-Q*I*(2*PI/totalDepth)}] +
 *                           SLD[totalDepth - 1] - SLD[0]|^2
 *
 * The paper regarding this transform and its applications to Nafion thin film systems is
 * 
 *    (1) Theodore Weinberger, The Inversion Problem, Reconstructing Scattering 
 *        Length Density Profiles from Neutron Reflectivity Spectra
 *        via the Principle of Maximum-Entropy (2021), Preprint submitted to 
 *        MPhil in Scientific Computing
 *
 * This program also uses the following packages
 *
 * For matrix manipulation: Armadillo from http://arma.sourceforge.net/docs.html
 *
 *    (1)  Conrad Sanderson and Ryan Curtin.
 *         Armadillo: a template-based C++ library for linear algebra.
 *         Journal of Open Source Software, Vol. 1, pp. 26, 2016.
 *
 *    (2)  Conrad Sanderson and Ryan Curtin.
 *         A User-Friendly Hybrid Sparse Matrix Class in C++.
 *         Lecture Notes in Computer Science (LNCS), Vol. 10931, pp. 422-430, 2018.
 *
 * For discrete fast fourier transforms: FFTW3 from http://www.fftw.org/
 *
 *    (1) Frigo M, Johnson SG (1998) FFTW: An adaptive software architecture for the FFT.
 *        In: Proceedings IEEE international conference acoustics, speech, and signal
 *        processing (ICASSP), 3, pp 13811384
 *
 *
 *    (2) Frigo M (1999) A fast Fourier transform compiler.
 *        In Proceedings of the ACM SIGPLAN 1999 conference on programming language
 *        design and implementation (PLDI 1999). ACM, New York, pp 169180
 *
 *    (3) Frigo M, Johnson SG (2005) The design and implementation of FFTW3.
 *        Proceedings of the IEEE 93(2):216231
 *
 * For accessing settings files: libconfig from http://hyperrealm.github.io/libconfig/
 * 
 ****************************************************************************************
 *
 * Author Theo Weinberger
 * 
 * Date 2021-02-17
 * 
 * 
 *
 ****************************************************************************************

 
 This code takes user settings in ReflectivitySettings.cfg. The coordinates and scaling settings are relevant
 to creating a reflectivity spectrum in the Fourier limit. 
 In order to run this code the only input file required is the settings in ReflectivitySettings.cfg.
 This will first call the reflectivity code and output the true SLD "SLD",
 the true reflectivity spectrum "reflectivitySpectrum" and the unscaled spectrum "data".

 Alternatively an already known SLD profile can be read in and the corresponding spectrum calculated

 The settings file should contain the Components specified in the components sub section.

 This should contain:
numSubstances - The number of different substances in this system
n - The amount of substance in each layer
depths - The depths of each layer which are integer values
sldVal - the SLD of each material
total - The total amount of substance in the whole system (used for normalisation)