 ****************************************************************************************
 * 
 * file DataMask.cpp
 * author Theo Weinberger
 * 
 *****************************************************************************************
 *
 * brief Method to clean experimental data by using either user defined or preset Gaussian frequency masks
 * This code uses simple gaussian forms to pick out the desired parts of the frequency spectrum
 * to produce cleaned data. 
 * 
 * This program also uses the following packages
 *
 * For matrix manipulation: Armadillo from http://arma.sourceforge.net/docs.html
 *
 *    (1)  Conrad Sanderson and Ryan Curtin.
 *         Armadillo: a template-based C++ library for linear algebra.
 *         Journal of Open Source Software, Vol. 1, pp. 26, 2016.
 *
 *    (2)  Conrad Sanderson and Ryan Curtin.
 *         A User-Friendly Hybrid Sparse Matrix Class in C++.
 *         Lecture Notes in Computer Science (LNCS), Vol. 10931, pp. 422-430, 2018.
 *
 * For discrete fast fourier transforms: FFTW3 from http://www.fftw.org/
 *
 *    (1) Frigo M, Johnson SG (1998) FFTW: An adaptive software architecture for the FFT.
 *        In: Proceedings IEEE international conference acoustics, speech, and signal
 *        processing (ICASSP), 3, pp 13811384
 *
 *
 *    (2) Frigo M (1999) A fast Fourier transform compiler.
 *        In Proceedings of the ACM SIGPLAN 1999 conference on programming language
 *        design and implementation (PLDI 1999). ACM, New York, pp 169180
 *
 *    (3) Frigo M, Johnson SG (2005) The design and implementation of FFTW3.
 *        Proceedings of the IEEE 93(2):216231
 *
 * For accessing settings files: libconfig from http://hyperrealm.github.io/libconfig/
 * 
 *****************************************************************************************
 * 
 * version 1.0
 * date 2021-06-29
 * 
 * copyright Copyright (c) 2021
 * 
 *****************************************************************************************
 
 This applies a frequency mask to the raw data to clean the data for usage in the MaxEnt algoirthm.
 Input data must be interpolated so that it is regularly spaced however should not be cropped or modulated.
 This allows for the true form of the frequency spectrum of the data to be analysed so that proper 
 masking can be imposed.

 The masking applied to the system is defined in settings.cfg. Using the boolean parameters one of a 
 low frequency mask, high frequency mask and a user defined mask can be used. 

 For default masking (high/low) numGauss = 1 and the user must specify one value for the standard deviation
 in the sigmas array. 

 For user defined masking the number of gaussians is variable and the means and standard deviations
 of the gaussians can be specified in the relevant arrays. The means and sigmas must be ordered relative 
 to each other and their lengths must be equal and equal to numGauss. 

 The data will be outputted from qOffset which is specified in array indeces. Values below
 qOffset will be zeroed and the system normalised to the value at qOffset. 